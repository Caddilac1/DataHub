# Generated by Django 5.2.5 on 2025-08-12 11:42

import authentication.managers
import authentication.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bundle',
            fields=[
                ('id', models.CharField(default=authentication.models.generate_bundle_id, editable=False, max_length=20, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(choices=[('mtnup2u', 'MTNUP2U'), ('telecel', 'Telecel'), ('atishare', 'AT-iShare')], max_length=50)),
                ('size_mb', models.PositiveIntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_instock', models.BooleanField(default=True)),
                ('is_out_of_stock', models.BooleanField(default=False)),
                ('is_limited', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['telco__name', 'size_mb'],
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.CharField(default=authentication.models.generate_user_id, editable=False, max_length=20, primary_key=True, serialize=False, unique=True)),
                ('full_name', models.CharField(max_length=255)),
                ('phone_number', models.CharField(max_length=15, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('role', models.CharField(choices=[('customer', 'Customer'), ('agent', 'Agent'), ('admin', 'Admin')], default='customer', max_length=20)),
                ('account_status', models.CharField(choices=[('pending_verification', 'Pending Email Verification'), ('active', 'Active'), ('suspended', 'Suspended'), ('deactivated', 'Deactivated')], default='pending_verification', max_length=30)),
                ('email_verified', models.BooleanField(default=False)),
                ('email_verified_at', models.DateTimeField(blank=True, null=True)),
                ('last_login_attempt', models.DateTimeField(blank=True, null=True)),
                ('failed_login_attempts', models.PositiveIntegerField(default=0)),
                ('account_locked_until', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            managers=[
                ('objects', authentication.managers.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.CharField(default=authentication.models.generate_audit_id, editable=False, max_length=20, primary_key=True, serialize=False, unique=True)),
                ('action', models.CharField(choices=[('user_created', 'User Created'), ('user_login', 'User Login'), ('user_logout', 'User Logout'), ('email_verified', 'Email Verified'), ('otp_generated', 'OTP Generated'), ('otp_verified', 'OTP Verified'), ('account_locked', 'Account Locked'), ('account_unlocked', 'Account Unlocked'), ('order_created', 'Order Created'), ('payment_made', 'Payment Made')], max_length=30)),
                ('details', models.JSONField(blank=True, default=dict)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DataBundleOrder',
            fields=[
                ('id', models.CharField(default=authentication.models.generate_order_id, editable=False, max_length=20, primary_key=True, serialize=False, unique=True)),
                ('phone_number', models.CharField(max_length=15)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('provider_order_id', models.CharField(blank=True, max_length=100, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bundle', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='authentication.bundle')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OTP',
            fields=[
                ('id', models.CharField(default=authentication.models.generate_otp_id, editable=False, max_length=20, primary_key=True, serialize=False, unique=True)),
                ('otp_type', models.CharField(choices=[('email_verification', 'Email Verification'), ('login_verification', 'Login Verification'), ('password_reset', 'Password Reset'), ('phone_verification', 'Phone Verification')], max_length=20)),
                ('hashed_code', models.CharField(max_length=128)),
                ('status', models.CharField(choices=[('active', 'Active'), ('used', 'Used'), ('expired', 'Expired'), ('invalidated', 'Invalidated')], default='active', max_length=15)),
                ('expires_at', models.DateTimeField()),
                ('used_at', models.DateTimeField(blank=True, null=True)),
                ('attempts', models.PositiveIntegerField(default=0)),
                ('max_attempts', models.PositiveIntegerField(default=5)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='otps', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.CharField(default=authentication.models.generate_payment_id, editable=False, max_length=20, primary_key=True, serialize=False, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reference', models.CharField(max_length=100, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('success', 'Success'), ('failed', 'Failed'), ('refunded', 'Refunded'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='payment', to='authentication.databundleorder')),
            ],
        ),
        migrations.CreateModel(
            name='Telco',
            fields=[
                ('id', models.CharField(default=authentication.models.generate_telco_id, editable=False, max_length=20, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'indexes': [models.Index(fields=['code'], name='authenticat_code_591b91_idx'), models.Index(fields=['is_active'], name='authenticat_is_acti_0e75f1_idx')],
            },
        ),
        migrations.AddField(
            model_name='databundleorder',
            name='telco',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='authentication.telco'),
        ),
        migrations.AddField(
            model_name='bundle',
            name='telco',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='authentication.telco'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['email'], name='authenticat_email_486e08_idx'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['phone_number'], name='authenticat_phone_n_226745_idx'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['account_status'], name='authenticat_account_bd1120_idx'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['created_at'], name='authenticat_created_b5dd7c_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['user', 'action'], name='authenticat_user_id_ec3763_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['created_at'], name='authenticat_created_d9c5cc_idx'),
        ),
        migrations.AddIndex(
            model_name='otp',
            index=models.Index(fields=['user', 'otp_type', 'status'], name='authenticat_user_id_025994_idx'),
        ),
        migrations.AddIndex(
            model_name='otp',
            index=models.Index(fields=['expires_at'], name='authenticat_expires_98a691_idx'),
        ),
        migrations.AddIndex(
            model_name='otp',
            index=models.Index(fields=['status'], name='authenticat_status_a964d8_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['reference'], name='authenticat_referen_44745f_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['status'], name='authenticat_status_0ec5e4_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['created_at'], name='authenticat_created_65a5f4_idx'),
        ),
        migrations.AddIndex(
            model_name='databundleorder',
            index=models.Index(fields=['user', 'status'], name='authenticat_user_id_97fdd3_idx'),
        ),
        migrations.AddIndex(
            model_name='databundleorder',
            index=models.Index(fields=['status', 'created_at'], name='authenticat_status_aac944_idx'),
        ),
        migrations.AddIndex(
            model_name='databundleorder',
            index=models.Index(fields=['phone_number'], name='authenticat_phone_n_97b729_idx'),
        ),
        migrations.AddIndex(
            model_name='bundle',
            index=models.Index(fields=['telco', 'is_active'], name='authenticat_telco_i_30c250_idx'),
        ),
        migrations.AddIndex(
            model_name='bundle',
            index=models.Index(fields=['is_instock'], name='authenticat_is_inst_21b986_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='bundle',
            unique_together={('telco', 'size_mb', 'name')},
        ),
    ]
